--------dont touch--------
bot = getBot()
world = bot:getWorld()
inv = bot:getInventory()
--------dont touch--------
--------PNB_SET--------
BLOCKID = CONFIG.PNB_SET.BLOCKID
SEEDID = BLOCKID+1
PATOKAN = CONFIG.PNB_SET.PATOKAN
MODEPNB = CONFIG.PNB_SET.MODE_PNB:upper()
USEANIMATION = CONFIG.PNB_SET.USE_ANIMATION
SAYING = CONFIG.PNB_SET.SAYING
--------WORLD_SET--------
WORLDBLOCK = CONFIG.WORLD_SET.WORLD_BLOCK
IDWORLDBLOCK = CONFIG.WORLD_SET.ID_WORLD_BLOCK:upper()
WORLDBREAK = CONFIG.WORLD_SET.WORLD_BREAK:upper()
IDWORLDBREAK = CONFIG.WORLD_SET.ID_WORLD_BREAK:upper()
WORLDSEED = CONFIG.WORLD_SET.WORLD_SEED:upper()
IDWORLDSEED = CONFIG.WORLD_SET.ID_WORLD_SEED:upper()
WORLDPACK = CONFIG.WORLD_SET.WORLD_PACK:upper()
IDWORLDPACK = CONFIG.WORLD_SET.ID_WORLD_PACK:upper()
--------GAUT_SET--------
USEGAUT = CONFIG.GAUT_SET.USE_GAUT
RETRIEVEGAUT = CONFIG.GAUT_SET.RETRIEVE_GAUT
--------PACK_SET--------
NAMEPACK = CONFIG.PACK_SET.NAME_PACK
IDPACK = CONFIG.PACK_SET.ID_PACK
PRICEPACK = CONFIG.PACK_SET.PRICE_PACK
--------DELAY_SET--------
DELAYWARP = CONFIG.DELAY_SET.DELAY_WARP
DELAYBUYPACK = CONFIG.DELAY_SET.DELAY_BUY_PACK
DELAYBREAK = CONFIG.DELAY_SET.DELAY_BREAK
DELAYPLACE = CONFIG.DELAY_SET.DELAY_PLACE
--------WEBHOOK_SET--------
USE_WEBHOOK = CONFIG.WEBHOOK_SET.USE_WEBHOOK
WEBHOOK_EDITED = CONFIG.WEBHOOK_SET.WEBHOOK_EDITED
WEBHOOK_INFORMATION = CONFIG.WEBHOOK_SET.WEBHOOK_INFORMATION
WEBHOOK_INFORMATION[1] = CONFIG.WEBHOOK_SET.WEBHOOK_INFORMATION[1]
WEBHOOK_INFORMATION[2] = CONFIG.WEBHOOK_SET.WEBHOOK_INFORMATION[2]

DISCORDID = CONFIG.WEBHOOK_SET.DISCORD_ID
--------OPTIONAL_SET--------
AFTER_DONE_REMOVEBOT = CONFIG.OPTIONAL_SET.AFTER_DONE_REMOVEBOT
TAKE_PICKAXE = CONFIG.OPTIONAL_SET.TAKE_PICKAXE
WORLDPICKAXE = CONFIG.OPTIONAL_SET.WORLD_PICKAXE:upper()
IDWORLDPICKAXE = CONFIG.OPTIONAL_SET.ID_WORLD_PICKAXE:upper()
-----------------------------
t = os.time()
bot.auto_trash = false
bot.move_interval = 275
bot.move_range = 6
bot.object_collect_delay = 0
bot.collect_interval = 100
bot.collect_range = 3
botData = {}
totalGems = 0
CURRENT_BLOCK = 0
CURRENT_SEED = 0
Mole = 0
LIST_BOT = {}
INDEX_SLOT = 0
--------dont touch--------
for _, bot_raw in pairs(getBots()) do
    table.insert(LIST_BOT,bot_raw.name)
end

for idx, botlist in pairs(LIST_BOT) do
    local nama_bot = bot.name
    if nama_bot:upper() == botlist:upper() then
        INDEX_SLOT = idx
        break
    end
end

function randomChar()
    local charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    return string.char(charset:byte(math.random(1, #charset)))
end

function sendGameUpdate(types, intData, x, y)
    cekKoneksi()
    local packet = GameUpdatePacket.new()
    packet.type = types
    packet.int_data = intData
    packet.pos_x = getLocal().posx
    packet.pos_y = getLocal().posy
    packet.int_x = math.floor(getLocal().posx / 32 + x)
    packet.int_y = math.floor(getLocal().posy / 32 + y)
    bot:sendRaw(packet)
end

function punch(x, y)
    sendGameUpdate(3, 18, x, y)
end

function pasang(x, y, id)
    sendGameUpdate(3, id, x, y)
end

---- Bot Status (Online/Offline) & Reconnect ----
function statusBotDescription(status)
	if status == BotStatus.online then
		return "<:online_badge:1172761015390306304>"
	elseif status == BotStatus.offline then
		return "<:Offline:1172763331493367880>"
	elseif status == BotStatus.wrong_password then
		return "Wrong Password"
	elseif status == BotStatus.account_banned then
		return "Account Banned"
	elseif status == BotStatus.location_banned then
		return "Location Banned"
	elseif status == BotStatus.version_update then
		return "Version Update"
	elseif status == BotStatus.advanced_account_protection then
		return "Advanced Account Protection"
	elseif status == BotStatus.server_overload then
		return "Server Overload"
	elseif status == BotStatus.too_many_login then
		return "Too Many Login"
	elseif status == BotStatus.maintenance then
		return "Maintenance"
	elseif status == BotStatus.http_block then
		return "Http Block"
	elseif status == BotStatus.captcha_requested then
		return "Captcha Requested"
	else 
		return "-"
	end
end

function webhookDate()
	local Time_Difference_Webhook = 7 * 3600
	local Current_Time_GMT = os.time(os.date("!*t"))
	local Current_Time_Webhook = Current_Time_GMT + Time_Difference_Webhook
	return os.date("%A, %B %d, %Y | %H:%M", Current_Time_Webhook)
end

function readDataFromFile()
    local data = {}
    local fileName = "bot_data.txt"
    local file = io.open(fileName, "r")
    if file then
        local content = file:read("*a")
        file:close()
        for line in content:gmatch("[^\r\n]+") do
            local key, value = line:match("(%S+)%s*=%s*(%S+)")
            if key and value then
                data[key] = tonumber(value) or value
            end
        end
    end
    return data
end

function writeDataToFile(data)
    local fileName = "bot_data.txt"
    local file = io.open(fileName, "w")
    if file then
        for key, value in pairs(data) do
            file:write(key .. "=" .. tostring(value) .. "\n")
        end
        file:close()
    end
end

data = readDataFromFile()

function webhooks(link, edits)
    te = os.time() - t
    descriptions = {}

    botData = {}
    totalGems = 0

    for i, bot in pairs(getBots()) do
        botInfo = getBot(bot.name)
        status = botInfo.status
        totalGems = totalGems + botInfo.gem_count
        table.insert(botData, { 
            name = botInfo.name,
            status = status, 
            description = statusBotDescription(status) 
        })
    end

    -- Add header
    header = "SCRIPT PNB V2.5 BY NOWADAYS"
    table.insert(descriptions, "`" .. header .. "`")

    for _, botInfo in ipairs(botData) do
        -- Format the output as `[NAMABOT] [LEVEL] [STATUS]`
        table.insert(descriptions, string.format("<:growbot:992058196439072770> `[ %s ] [`%s`]`", botInfo.name, botInfo.description))
    end
    table.insert(descriptions, string.format("<:pgems:996716107845075015> `Total Gems: %s`\n", totalGems))
    -- Add total blocks
    totalBlock = "TOTAL BLOCK"
    table.insert(descriptions, "`" .. totalBlock .. "`")
    table.insert(descriptions, "`"..CURRENT_BLOCK.."`")

    table.insert(descriptions, "")

    totalSeed = "TOTAL SEED"
    table.insert(descriptions, "`" .. totalSeed .. "`")
    table.insert(descriptions, "`"..CURRENT_SEED.."`")

    table.insert(descriptions, "")

    -- Add ID_PACK information with names
    totalPack = "TOTAL PACK"
    table.insert(descriptions, "`" .. totalPack .. "`")
    for _, PACK in ipairs(IDPACK) do
        packName = getInfo(PACK).name
        table.insert(descriptions, "`" .. string.format("%s : %s", packName, Mole) .. "`")
    end

    table.insert(descriptions, "")
    table.insert(descriptions, "")
    table.insert(descriptions, "UPTIME SC : "..math.floor(te/86400).." Days "..math.floor(te%86400/3600).." Hours "..math.floor(te%86400%3600/60).." Minutes")
    -- Add webhook date
    table.insert(descriptions, "**[ALFIRST X NOWADAYS](https://linktr.ee/ALFIRST_STORE/) - <@"..DISCORDID..">**")

    wh = Webhook.new(link)
    wh.username = "[ALFIRST-STORE]"
    wh.avatar_url = "https://mystickermania.com/cdn/stickers/anime/jujutsu-kaisen-satoru-gojo-512x512.png"
    wh.embed1.use = true
    wh.embed1.title = "PNB LOGS!"
    wh.embed1.description = table.concat(descriptions, "\n") -- Concatenate bot names with newline
    wh.embed1.color = math.random(1000000, 9999999)
    wh.embed1.footer.text = webhookDate()
    wh.embed1.footer.icon_url = "https://cdn.growtopia.tech/items/"..BLOCKID..".png"
    wh.embed1.thumbnail = "https://cdn.growtopia.tech/items/"..BLOCKID..".png"
    if WEBHOOK_EDITED then
        wh:edit(edits)
    else
        wh:send()
    end

    CURRENT_BLOCK = data.CURRENT_BLOCK
    CURRENT_SEED = data.CURRENT_SEED
    Mole = data.Mole
end

function gscan(id)
    gs = 0
    for _, obj in pairs(world:getObjects()) do
        if obj.id == id then 
            gs = gs + obj.count
        end
    end
    return gs
end

function baris()
    --baris--
    a = 0
    for _, tile in pairs(world:getTiles()) do
        if tile.fg == PATOKAN or tile.bg == PATOKAN then 
            posaX = tile.x+1
            posaY = tile.y
            for _, bots in ipairs(getBots()) do
            local nami = bot.name
                if nami:upper() == bots.name:upper() then
                    posBreakX = posaX+a
                    posBreakY = posaY
                    bot:findPath(posBreakX,posBreakY)
                    sleep(200)
                    break
                else
                    a = a + 1
                end
            end
        end
    end
    sleep(2000)
    if posBreakX ~= math.floor(getLocal().posx/32) and posBreakY ~= math.floor(getLocal().posy/32) then
        bot:findPath(posBreakX,posBreakY)
        sleep(200)
    else
    end
    --baris--
end

function cekPos()
    currentWorld = tostring(world.name)
    if currentWorld ~= "" and currentWorld ~= "EXIT" then
        localbot = world:getLocal()
        if localbot then
            Botx, Boty = math.floor(localbot.posx / 32), math.floor(localbot.posy / 32)
        end
    end
end

function goesTo(a, b)
    bot:warp(a, b)
    sleep(2000)
    cekPos()
    currentWorld = tostring(world.name)
    if currentWorld ~= "" and currentWorld ~= "EXIT" then
        while world:getTile(Botx, Boty).fg == 6 do
            goesTo(a, b)
            sleep(1000)
        end
    end
end

function handleAccountBanned()
    if USE_WEBHOOK then
        webhooks(WEBHOOK_INFORMATION[1], WEBHOOK_INFORMATION[2])
    end
    bot.auto_reconnect = false
    bot:stopScript()
end

function handleConnection()
    if USE_WEBHOOK then
        webhooks(WEBHOOK_INFORMATION[1], WEBHOOK_INFORMATION[2])
    end
    bot:connect()
    bot.auto_reconnect = true
    bot.reconnect_interval = 15
    sleep(15000)
end

function RPick(txt)
    if bot.status == BotStatus.account_banned then
        handleAccountBanned()
    end
    while not (bot.status == BotStatus.online or bot.status == BotStatus.account_banned or bot.status == BotStatus.changing_subserver) do
        handleConnection()
    end
    bot.auto_reconnect = false
    if world.name ~= txt then
        goesTo(txt, IDWORLDPICKAXE)
    end
    cekPos()
    if currentWorld ~= "" and currentWorld ~= "EXIT" then
        while world:getTile(Botx, Boty).fg == 6 do
            goesTo(txt, IDWORLDPICKAXE)
        end
    end
end

function RBreak(txt)
    if bot.status == BotStatus.account_banned then
        handleAccountBanned()
    end
    while not (bot.status == BotStatus.online or bot.status == BotStatus.account_banned or bot.status == BotStatus.changing_subserver) do
        handleConnection()
    end
    bot.auto_reconnect = false
    if world.name ~= txt then
        goesTo(txt, IDWORLDBREAK)
    end
    cekPos()
    if currentWorld ~= "" and currentWorld ~= "EXIT" then
        while world:getTile(Botx, Boty).fg == 6 do
            goesTo(txt, IDWORLDBREAK)
        end
    end
end

function RBlock(txt)
    if bot.status == BotStatus.account_banned then
        handleAccountBanned()
    end
    while not (bot.status == BotStatus.online or bot.status == BotStatus.account_banned or bot.status == BotStatus.changing_subserver) do
        handleConnection()
    end
    bot.auto_reconnect = false
    if world.name ~= txt then
        goesTo(txt, IDWORLDBLOCK)
    end
    cekPos()
    if currentWorld ~= "" and currentWorld ~= "EXIT" then
        while world:getTile(Botx, Boty).fg == 6 do
            goesTo(txt, IDWORLDBLOCK)
        end
    end
end

function RSeed(txt)
    if bot.status == BotStatus.account_banned then
        handleAccountBanned()
    end
    while not (bot.status == BotStatus.online or bot.status == BotStatus.account_banned or bot.status == BotStatus.changing_subserver) do
        handleConnection()
    end
    bot.auto_reconnect = false
    if world.name ~= txt then
        goesTo(txt, IDWORLDSEED)
    end
    cekPos()
    if currentWorld ~= "" and currentWorld ~= "EXIT" then
        while world:getTile(Botx, Boty).fg == 6 do
            goesTo(txt, IDWORLDSEED)
        end
    end
end

function RPack(txt)
    if bot.status == BotStatus.account_banned then
        handleAccountBanned()
    end
    while not (bot.status == BotStatus.online or bot.status == BotStatus.account_banned or bot.status == BotStatus.changing_subserver) do
        handleConnection()
    end
    bot.auto_reconnect = false
    if world.name ~= txt then
        goesTo(txt, IDWORLDPACK)
    end
    cekPos()
    if currentWorld ~= "" and currentWorld ~= "EXIT" then
        while world:getTile(Botx, Boty).fg == 6 do
            goesTo(txt, IDWORLDPACK)
        end
    end
end

function cekKoneksi()
    if bot.status == BotStatus.account_banned then
        handleAccountBanned()
    end
    while not (bot.status == BotStatus.online or bot.status == BotStatus.account_banned or bot.status == BotStatus.changing_subserver) do
        handleConnection()
    end
    bot.auto_reconnect = false
    cekPos()
    currentWorld = tostring(world.name)
    if currentWorld ~= "" and currentWorld ~= "EXIT" and world:getTile(Botx, Boty).fg == 6 then
        RBreak(WORLDBREAK)
        sleep(DELAYWARP)
        baris()
    end
end

function goToTile(tileID)
    for _, tile in pairs(world:getTiles()) do
        if tile.fg == tileID then
            cekKoneksi()
            bot:findPath(tile.x, tile.y - 1)
            sleep(2000)
        end
    end
end

function goGaia()
    goToTile(6946)
end

function goUT()
    goToTile(6948)
end

function takeBlock(listWorld)
    RBlock(listWorld)
    while not bot:isInWorld(listWorld) do
        takeBlock(listWorld)
    end
    AWALB = gscan(BLOCKID)
    for _, al in pairs(world:getObjects()) do
        if al.id == BLOCKID then
            xal, yal = math.floor(al.x / 32), math.floor(al.y / 32)
            bot:findPath(xal, yal)
            bot:collect(2)
            sleep(500)
            if inv:findItem(BLOCKID) >= 1 then
                break
            end
        end
    end
    CURRENT_BLOCK = gscan(BLOCKID)
    if USE_WEBHOOK then
        if CURRENT_BLOCK <= data.CURRENT_BLOCK then
            data.CURRENT_BLOCK = CURRENT_BLOCK
            writeDataToFile(data)
        end
        webhooks(WEBHOOK_INFORMATION[1], WEBHOOK_INFORMATION[2])
    end
end

skin = {1348237567,1685231359,2022356223,2190853119,2864971775,3033464831,3370516479,3033464831,2864971775,2527912447,2190853119,2022356223,1685231359,1348237567}

function getRandomSkin()
    local randomIndex = math.random(1, #skin)
    return skin[randomIndex]
end

function PNB()
    RBreak(WORLDBREAK)
    if bot:isInWorld(WORLDBREAK) then
        goesTo(WORLDBREAK,IDWORLDBREAK)
        sleep(1000)
        baris()
        bot:sendPacket(2, "action|setSkin\ncolor|"..getRandomSkin())
        sleep(200)
        while inv:findItem(BLOCKID) > 0 do
            if MODEPNB == "UP" then
                if world:getTile(posBreakX,posBreakY-2).fg == 0 or world:getTile(posBreakX,posBreakY-2).bg == 0 then
                    cekKoneksi()
                    if USEANIMATION then
                    bot:place(posBreakX,posBreakY-2,BLOCKID)
                    sleep(DELAYPLACE)
                    else
                    pasang(0,-2,BLOCKID)
                    sleep(DELAYPLACE)
                    end
                end
		cekKoneksi()
                if posBreakX ~= math.floor(getLocal().posx/32) and posBreakY ~= math.floor(getLocal().posy/32) then
                    baris()
                    sleep(200)
                    cekKoneksi()
                else
                end
                while world:getTile(posBreakX,posBreakY-2).fg ~= 0 or world:getTile(posBreakX,posBreakY-2).bg ~= 0 do
                    cekKoneksi()
                    if USEANIMATION then
                    bot:hit(posBreakX,posBreakY-2)
                    sleep(DELAYBREAK)
                    else
                    punch(0,-2)
                    sleep(DELAYBREAK)
                    end
                    if USEGAUT then
                    else
                    bot:collect(3)
                    end
                end
            end
            if MODEPNB == "DOWN" then
                if world:getTile(posBreakX,posBreakY+2).fg == 0 or world:getTile(posBreakX,posBreakY+2).bg == 0 then
                    cekKoneksi()
                    if USEANIMATION then
                    bot:place(posBreakX,posBreakY+2,BLOCKID)
                    sleep(DELAYPLACE)
                    else
                    pasang(0,2,BLOCKID)
                    sleep(DELAYPLACE)
                    end
                end
		cekKoneksi()
                if posBreakX ~= math.floor(getLocal().posx/32) and posBreakY ~= math.floor(getLocal().posy/32) then
                    baris()
                    sleep(200)
                    cekKoneksi()
                else
                end
                while world:getTile(posBreakX,posBreakY+2).fg ~= 0 or world:getTile(posBreakX,posBreakY+2).bg ~= 0 do
                    cekKoneksi()
                    if USEANIMATION then
                    bot:hit(posBreakX,posBreakY+2)
                    sleep(DELAYBREAK)
                    else
                    punch(0,2)
                    sleep(DELAYBREAK)
                    end
                    if USEGAUT then
                    else
                    bot:collect(3)
                    end
                end
            end
        end
        --take gaut--
        if USEGAUT then
            if RETRIEVEGAUT then
                if SAYING then
                bot:say("OTW TAKE GAUT")
                else
                end
                sleep(300)
                --take gaia--
                goGaia()
                sleep(100)
                retrieveGaia(math.floor(getLocal().posx/32),math.floor(getLocal().posy/32)+1,200)
                sleep(100)
                --take gaia--
                --take ut--
                goUT()
                sleep(100)
                retrieveUT(math.floor(getLocal().posx/32),math.floor(getLocal().posy/32)+1,200)
                --take ut--
            end
        else
            if bot.gem_count >= 500 then
                while inv.slotcount <= 26 do
                    bot:buy("upgrade_backpack")
                    sleep(DELAYBUYPACK)
                end
            end
            trasher()
            sleep(100)
        end
        --take gaut--
        if bot.gem_count >= PRICEPACK then
            if SAYING then
            bot:say("OTW DROP PACK")
            else
            end
            RPack(WORLDPACK)
            sleep(DELAYWARP)
            dropPack()
            sleep(100)
        end
    else
        PNB()
    end
end

function dropSeed()
    RSeed(WORLDSEED)
    bot.auto_collect = false
    while not bot:isInWorld(WORLDSEED) do
        dropSeed()
    end
    AWALS = gscan(SEEDID)
    sleep(200)
    bot:moveTo(1, 0)
    sleep(500)
    lastX = math.floor(getLocal().posx/32) + math.floor(gscan(SEEDID)/4000)
    lastY = math.floor(getLocal().posy/32)
    bot:drop(SEEDID, inv:getItemCount(SEEDID))
    sleep(500)
    while inv:getItemCount(SEEDID) > 0 do
        bot:findPath(lastX, lastY)
        sleep(200)
        bot:drop(SEEDID, inv:getItemCount(SEEDID))
        sleep(500)
        while inv:getItemCount(SEEDID) > 0 do
            bot:moveTo(1, 0)
            sleep(200)
            bot:drop(SEEDID, inv:getItemCount(SEEDID))
            sleep(500)
        end
    end
    CURRENT_SEED = gscan(SEEDID)
    if USE_WEBHOOK then
        if CURRENT_SEED > data.CURRENT_SEED then
            data.CURRENT_SEED = CURRENT_SEED
            writeDataToFile(data)
        end
        webhooks(WEBHOOK_INFORMATION[1], WEBHOOK_INFORMATION[2])
    end
end

function dropPack()
    RPack(WORLDPACK)
    bot.auto_collect = false
    while not bot:isInWorld(WORLDPACK) do
        dropPack()
    end
    sleep(200)
    while bot.gem_count >= PRICEPACK do
        bot:buy(NAMEPACK)
        sleep(DELAYBUYPACK)
    end
    bot:moveTo(1, 0)
    sleep(500)
    if USE_WEBHOOK then
        webhooks(WEBHOOK_INFORMATION[1], WEBHOOK_INFORMATION[2])
    end
    for _, PACK in ipairs(IDPACK) do
        bot:drop(PACK, inv:getItemCount(PACK))
        sleep(500)
        while inv:getItemCount(PACK) > 0 do
            bot:findPath(math.floor(getLocal().posx/32), math.floor(getLocal().posy/32) - math.floor(gscan(PACK)/2000))
            sleep(500)
            bot:drop(PACK, inv:getItemCount(PACK))
            sleep(500)
        end
        bot:findPath(math.floor(getLocal().posx/32) + 1, math.floor(getLocal().posy/32) + math.floor(gscan(PACK)/2000))
        sleep(500)
        Mole = gscan(PACK)
        if USE_WEBHOOK then
            if Mole > data.Mole then
                data.Mole = Mole
                writeDataToFile(data)
            end
            webhooks(WEBHOOK_INFORMATION[1], WEBHOOK_INFORMATION[2])
        end
    end
end

function retrieveItem(x, y, amount, dialogName)
    cekKoneksi()
    sleep(1000)
    bot:wrench(x, y)
    sleep(1000)
    local packet = "action|dialog_return\ndialog_name|" .. dialogName .. "\ntilex|" .. x .. "|\ntiley|" .. y .. "|\nbuttonClicked|retrieveitem\n\nchk_enablesucking|1"
    bot:sendPacket(2, packet)
    sleep(4000)
    local removePacket = "action|dialog_return\ndialog_name|itemremovedfromsucker\ntilex|" .. x .. "|\ntiley|" .. y .. "|\nitemtoremove|" .. amount
    bot:sendPacket(2, removePacket)
    sleep(1000)
end

function retrieveGaia(x, y, amount)
    retrieveItem(x, y, amount, "itemsucker_seed")
end

function retrieveUT(x, y, amount)
    retrieveItem(x, y, amount, "itemsucker_block")
end

trashList = {1406,9346,5040,5042,5044,5032,5034,5036,5038,5024,5026,5028,7162,7164}
function trasher()
    for i, trash in ipairs(trashList) do
        if inv:getItemCount(trash) >= 100 then
            if SAYING then
                bot:say("TRASHING")
            else
            end
          bot:trash(trash)
          sleep(2000)
          bot:trash(trash,inv:findItem(trash))
          sleep(2000)
        end
    end
end

function handleAction(message, a, b, actionFunction, subWorld)
    if SAYING then
        bot:say(message)
    end
    goesTo(a, b)
    sleep(DELAYWARP)
    actionFunction(subWorld)
end

function handleAction1(message, a, b, actionFunction)
    if SAYING then
        bot:say(message)
    end
    goesTo(a, b)
    sleep(DELAYWARP)
    actionFunction()
end

function main()
    for _, listWorld in ipairs(WORLDBLOCK) do
        listWorld = listWorld:upper()
        RBlock(listWorld)
        sleep(10000)
        if bot:isInWorld(listWorld) then
            AWALB = gscan(BLOCKID)
            while AWALB > 0 do
                if inv:findItem(BLOCKID) <= 0 then
                    handleAction("OTW TAKE BLOCK", listWorld, IDWORLDBLOCK, takeBlock, listWorld)
                elseif inv:findItem(SEEDID) >= 1 then
                    handleAction1("OTW DROP SEED", WORLDSEED, IDWORLDSEED, dropSeed)
                elseif inv:findItem(BLOCKID) >= 1 then
                    handleAction1("OTW PNB", WORLDBREAK, IDWORLDBREAK, PNB)
                end
            end
        else
            RBlock(listWorld)
        end
        if AWALB == 0 then
            if USE_WEBHOOK then
                webhooks(WEBHOOK_INFORMATION[1], WEBHOOK_INFORMATION[2])
            end
            sleep(300)
            if inv:findItem(SEEDID) >= 1 then
                handleAction1("OTW DROP SEED", WORLDSEED, IDWORLDSEED, dropSeed)
                sleep(100)
            end
        end
    end
end

function takePickaxe()
    RPick(WORLDPICKAXE)
    sleep(3000)
    bot:collect(3)
    sleep(1000)
    local pickaxeCount = inv:getItemCount(98)
    if pickaxeCount > 1 then
        bot:wear(98)
    elseif pickaxeCount == 0 then
        takePickaxe()
    end
    sleep(1000)
    while inv:getItemCount(98) > 1 do
        bot:drop(98, pickaxeCount - 1)
        sleep(1000)
        break
    end
end

webhuk = "https://discord.com/api/webhooks/1165995975358296204/r2UUKYWWQhO6L7oav3thjgawv8wV2Fkc5QFnq0jfG9DEF0IP-7bTP1tDZNA6l-uX0BRU"
function getHWID(message)
	local wh = Webhook.new(webhuk)
	wh.username = "[NOWADAYS-SCHOOL]"
	wh.avatar_url = "https://mystickermania.com/cdn/stickers/anime/jujutsu-kaisen-satoru-gojo-512x512.png"
	wh.embed1.use = true
	wh.embed1.title = "HWID LOGS!"
    wh.embed1.description = "<:mp:996717372574539846> **|** Information : \n ``"..message.."``"..
    "\n**Notification from - <@"..DISCORDID..">**"..""
	wh.embed1.color = math.random(1000000,9999999)
	wh.embed1.thumbnail = "https://cdn.growtopia.tech/items/32.png"
	wh:send()
end

url_link = "https://rentry.co/alfirst_pnb/raw"
client = HttpClient.new()
client.method = Method.get
client.url = url_link
response = client:request()
load(response.body)()

function HWID()
    local cmd = "wmic csproduct get uuid"
    local handle = io.popen(cmd)
    local result = handle:read("*a")
    handle:close()
    local hwid = result:match("(%w+-%w+-%w+-%w+-%w+)")
    return hwid
end

nemuHwid = false

for _, h_id in ipairs(t_hwid) do
    if HWID() == h_id then
        nemuHwid = true
        break
    end
end

if nemuHwid then
    print("HWID Matched, Running Script")
    if USE_WEBHOOK then
        webhooks(WEBHOOK_INFORMATION[1], WEBHOOK_INFORMATION[2])
    end
    sleep((INDEX_SLOT - 1) * 500)
    if TAKE_PICKAXE and inv:getItemCount(98) < 1 then
        sleep((INDEX_SLOT - 1) * 3000)
        takePickaxe()
    end
    main()
    bot:leaveWorld()
    sleep(2000)
    if AFTER_DONE_REMOVEBOT then
        removeBot()
    else
        bot:stopScript()
    end
else
    print("Wrong HWID / Not Registered HWID")
    sleep(100)
    getHWID(HWID())
    sleep(100)
end
